/* index.css
-Reset
-Variables
-Header
-Title
-Muestra
-WorkIntro
-Works
-WordPress
-Code
-CodeGrid
-Photoshop
-PhotoGallery
-Flecha
-Button
-Contact
-Footer
-Info
 */


/* Reset / Normmalizador */
*{
  margin:0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
}
li{
  list-style: none;
}
a{
  display: block;
  color: inherit;
  text-decoration: none;
}
p a{
  display: inline;
}
img , svg {
  display: block;
  width: 100%;
  height: inherit;
  object-fit: cover;

}
svg{
  fill: currentColor;
}
:root{
  font-size: 100%;
  scroll-behavior: smooth;
  --main-color: #FFD700;
  --secondary-color: #F6F6F6;
  --main-bg-color: #121212;
  --fontsize-tittle-big: clamp(4rem,  7.38vw, 6rem);
  --fontsize-tittle-medium: clamp(2rem,  4vw, 3rem);
  --fontsize-tittle-small: clamp(1rem,  2.5vw, 1.5rem);
  --fontsize-p: 1rem;

}
body{
  font-family: Arial, Helvetica, sans-serif;
  hyphens: auto;
  background-color: var(--main-bg-color);
}
h1 , h2 , h3 , h4 , h5 , h6{
  font-size: inherit;
  font-weight: inherit;
}
.Header{
  width: 200px;
  height: 60px;
  display: flex;
  flex-flow: column nowrap;
  position: fixed;
  top: 10px;
  right: 0;
  z-index: 3;
  overflow: hidden;
  transition: height .5s ease;
  gap: 16px;
}
.HeaderIsVisible{
  height: auto; /*Cuando se añade se adapta a la altura del header, el cual está a 60px */
}

.Header-top{
  width: 100%;
  min-height: 60px;
  transform: translateX(120px);
  transition: transform .5s ease;
  cursor: pointer;

}
.Header-top-h1{
  width: 100%;
  position: relative;
  overflow: hidden;
  width: 60px;
  height: 60px;
  background-color: var(--main-bg-color);
  border-radius: 60px;
}
.Header-top-span--none{
  position: absolute; /* Como no quiero que se vea, pero tampoco quiero que sea display: none, he utilizado este metodo. */
  left: 999px;
  opacity: 0;
  
}

.Header-top-svg{
  padding-left: 6px; /* Como no se centraba completamente en el contenedor, se añadió un padding.*/
  padding-top: 5px;
}
.Header-bottom{
  width: 100%;
  min-height: 150px;
  transform: translateX(200px);
  transition: transform .5s ease;

}
.Header-bottom-ul{
  width: 100%;
  min-height: 130px;
  background-color: var(--main-bg-color);
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: start;
  gap: 1px;
}
.Header-bottom-li{
  width: 100%;


}
.Header-bottom-a{
background-color: var(--secondary-color);
  width: 100%;
  min-height: 2.5rem;
  display: flex;
  flex-flow: row nowrap;
  justify-content: start;
  align-items: center;
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--main-bg-color);
}
.Header-bottom-a:hover{
  background-color: rgba(255, 255, 255, 0); /* Al hacer hover el fondo se vuelve transparente */
  color: var(--secondary-color);
}
.headerIsActive{
  transform: translateX(0); /* El Header se muestra por completo  */

}
.MainIsFixed{ /* Se utiliza para fijar el Main durante los efectos de Javascript */
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}
/* Descripción: Estilo del Title
Estructura: 
- Title-h2
- Muestra
*/
.Title{ 
  width: 100%;
  height: 100vh;
  top: 0;
  left: 0;
  transition: transform 3s ease;
  overflow: hidden;

}

.Title-h2Wrapper{
  width: 100%;
  min-height: 100vh;
  background-color: var(--main-color);
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  position: relative;
}
.Title-h2{ /* Es el contenedor de las palabras. Estará en posicion absouta para mayor control */
  font-family: "Orbitron", sans-serif;
  font-size: 96px;
  font-weight: 700;
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  left: 0;
}


.Title-h2-span{ /* Para poder colocarlas de forma correcta, se le aplica un width, height, y posicion absoluta.  */
  width: 525px;
  height: 128px;
position: absolute;
}
.Title-h2-span--primero{ /* Iremos colocando cada span de forma individual*/
  top: 0;
  right: calc(50% - (525px / 2));
  transition: top .8s ease;


}
.Title-h2-span--segundo{
  top: 20vh;
  right: calc(50% - (525px / 2));
  transition: top .4s ease;
}
.Title-h2-span--tercero{
  top: 40vh;
  right: calc(50% - (525px / 2));
}
.Title-h2-span--cuarto{
  top: 60vh;
  right: calc(50% - (525px / 2));
  transition: top .4s ease;

}
.Title-h2-span--quinto{
  top: 80vh;
  right: calc(50% - (525px / 2));
  transition: top .8s ease;


}
.TitleH2IsVisible{
  top: 40vh;
  right: calc(50% - (525px / 2));
}
.Title-h2-span--front{ /* Queremos que estos estén al frente, y que tengan un fondo transparente y mantengan el borde del texto, ya que las imagenes de Muestra pasaran detras suya */
  color: transparent; 
    -webkit-text-stroke: .0625rem var(--secondary-color); 
    z-index: 2;
}
.Title-h2-span--behind{ /* Estas se quedaran detras, para asegurarse de que las imagenes de Muestra pasen por delante suya, se les pone un Index 0 */
  color: var(--secondary-color);
  z-index: 0;
}
.MuestraWrapper{ /* Funciona como un contenedor de slider */
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-flow: row nowrap;
  z-index: 1;
  overflow: hidden;

}
.Muestra{ /* Es el slider. Se ira moviendo al hacer scroll */
  width: 300%;
  min-height: 100vh;
  display: flex;
  flex-flow: row nowrap;
  transition: transform 1s ease;
  position: relative;
  left: 100vw;
}
.Muestra-li{
  width: 100vw;
  min-height: 100vh;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  
}
.Muestra-li:nth-child(1){ /* Posicionaremos los elementos internos en distintos align-items */
  align-items: start;
}
.Muestra-li:nth-child(2){
  align-items: center;
}
.Muestra-li:nth-child(3){
  align-items: end;
}
.Muestra-img{
  width: 25rem;
  height: inherit;

}
@media (max-width: 1000px){ /* Debido a la naturaleza del efecto en javascript, nos limitaremos a dejarlo lo mas simple posible para pantallas pequeñas */
  .Title-h2{ /* Reducimos el tamaño de las letras */
    font-size: 5rem;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
  }
  
  .Title-h2-span{/* Quitamos Posicion absolute, ya no nos interesa, ya que solo mostraremos un span  */

  display: none;
  position: static;
  }
  .Title-h2-span--behind.Title-h2-span--primero{ /* Mostramos uno */
    display: flex;
  }

 .MuestraWrapper{/* Quitamos el slider, ya que depende del scroll*/
  display: none; 
 }
}
@media (max-width: 600px){
  .Title-h2{/* Reducimos las letras aun más para ajustar a la pantalla */
    font-size: 4rem;}

}
/* Descripción: Estilo del WorkIntro.
Estructura: 
- WorkIntro-p
*/
.WorkIntro{
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  padding: 48px 0;
  margin-top: 6rem;
  }
  .WorkIntro-pWrapper{
    width: 70%;
    max-width: 50rem;
    border: .0625rem solid var(--main-color);
    padding: 48px;
    border-radius: 16px;
  }
  .WorkIntro-p{
    font-family: "Lato", sans-serif;
    
    font-size: var(--fontsize-tittle-small);
    color: var(--secondary-color);
    font-weight: 400;
    padding: 16px 0;
  }
  @media (max-width: 1000px){ /* Ajustamos a pantallas pequeñas */
    .WorkIntro{
      padding: 0;
    }
    .WorkIntro-pWrapper{
      padding: 1rem;

    }
  }
  /* Descripción: Estilo del Works.
Estructura: 
- WordPress
- Code
- Photoshop
*/
.Works{
  width: 100%;
  min-height: 800px;
  margin-top: 6rem;
}
.Works-ul{
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;

}
.WordPress{ /* Aunque es solo una pagina de Wordpress, utilizaremos grid para dar un estilo mas interesante */
  width: 100%;
  max-width: 1100px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1.5rem;
  padding: 3rem 1rem;

}
.Wordpress-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
  transition: transform .6s ease, opacity .6s ease;
}

.Wordpress-imgWrapper{ /* Posicionamos cada elemnto del Grid según convenga con grid-row y grid-column */
  grid-row: 2 / 3;
  grid-column: 2 / 5 ;
  min-height: 400px;
  position: relative;

}
.Wordpress-img{ /* Colocaremos las imagenes en posicion absoluta de forma individual*/
  width: 400px;
  height: inherit;
  position: absolute;
}

.Wordpress-img:nth-child(1){
  top: 0;
  left: 0;
  transition: transform .6s ease, opacity .6s ease;

}
.Wordpress-img:nth-child(2){
  width: 200px;
bottom: 0;
right: calc(50% - 100px);
transition: transform 1s ease, opacity 1s ease;

}
.Wordpress-img:nth-child(3){
  bottom: 0;
  right: 0;
  transition: transform 1.4s ease, opacity 1.4s ease;

}


.Wordpress-p{
  grid-row: 1 / 2;
  grid-column: 3 / 5;
  font-family: "Lato", sans-serif;
  
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  font-weight: 400;
  transition: transform 1s ease, opacity 1s ease;


}
.Wordpress-svgWrapper{ 
  grid-row: 2 / 3;
  grid-column: 1 / 2 ;
  transition: transform .6s ease, opacity .6s ease;

}
.Wordpress-svgWrapper svg{
  width: 200px;
}
@media (max-width: 1000px){ /* no necesitamos que este en grid, lo cambiamos a flex column*/
  .WordPress{
    display: flex;
    flex-flow: column nowrap;
    justify-content: start;
    align-items: center;
  }
  .Wordpress-svgWrapper svg{
    width: 100px;
  }
  .Wordpress-imgWrapper{
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
  }
  .Wordpress-img{ /* Queremos las tres imagenes en horizontal, todavia caben */
    position: static;
    width: calc(100% / 3);
    height: inherit;
  }
}
@media (max-width: 600px){
  .Wordpress-imgWrapper{
    display: flex;
    flex-flow: column nowrap;
    
  }
  .Wordpress-img{
    width: 100%; /* Aqui ya no, mejor que ocupen todo el ancho del contenedor*/
  }
}

.Code{
  width: 100%;
  max-width: 1100px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
  padding: 3rem 1rem;


}
.Code-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
  padding-bottom: 2rem;
  font-weight: 400;
}
.Code-span{
  font-family: "Lato", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  padding-bottom: 2rem;
  font-weight: 400;
}
.CodeGrid{ /* Como son 4 webs, he decidido utilizar display grid con 2 columnas*/
  width: 100%;
  min-height: 600px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;

}
.CodeGrid-item{ 
  transition: transform .6s ease, opacity .6s ease;

}
.CodeGrid-a{
  width: 100%;
}
.CodeGrid-h4{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  font-weight: 400;
  padding-bottom: 1rem;
}
.CodeGrid-imgWrapper{
  width: 100%;
}
.CodeGrid-img{ /* Por preferencia estética he decidido darle una altura establecida */
  width: 100%;
 height: 300px; 

}
@media (max-width: 600px){ /* 1 columna para el caso de moviles */
  .CodeGrid{
    grid-template-columns: repeat(1, 1fr);

  }
}
.Observer{ /* Simple clase creada para dar un efecto en javascript */
  transform: translateY(200px);
  opacity: 0;
}
.elementoIsVisible{ /* Lo mismo */
  opacity: 1;
  transform: translateY(0);
}
.Photoshop{ 
  width: 100%;
  max-width: 1100px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
  padding: 3rem 1rem;
}
.Photoshop-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
  padding-bottom: 2rem;
}
.PhotoGalleryWrapper{ /* Contenedor de la galeria*/
  width: 100%;
  min-height: 500px;
  position: relative;
  overflow: hidden;
}
.PhotoGallery{ /* Slider, mismo estilo que los anteriores. */
  width: 300%;
  display: flex;
  flex-flow: row nowrap;
  justify-content: start;
  align-items: center;
  transition: transform 1s ease;

}
.PhotoGallery-li{
  width: calc(100% / 3);
  columns: 300px;
  padding-left: 1em;
}


.PhotoGallery-img{
  width: 100%;
  height: inherit;
  margin-bottom: 1em;
  transition: transform .3s ease, filter .3s ease;
}
.PhotoIsActive{
  transform: scale(1.3);
  position: relative;
  z-index: 1;
  box-shadow: 0rem 0rem 0.3rem 0.1rem var(--main-color);
}

.Flecha{ /* Estilo de las flechas que controlan la galeria */
  width: 4rem;
  height: 4rem;
  background-color: var(--main-color);
  position: absolute;
  cursor: pointer;
  z-index: 2;
  padding: 0 10px;

}
.Flecha svg{
  width: 2.5rem;
}
.Flecha--izquierda{
  top: calc(50% - 2rem);
  left: 0;
}
.Flecha--derecha{
  top: calc(50% - 2rem);
  right: 0;
}

.Button{ /* Aqui se establece el estilo del enlace*/
  width: 350px;
  height:200px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
  border: 1px solid var(--main-color);
  background: repeating-linear-gradient(/* Para poder destacar más el enlace, se le da un patrón con líneas blancas */
  45deg,
  #F6F6F6,
  #121212 5px,
  #121212 5px,
  #121212 60px
);
}
.Button-background{/* Este es el fondo que aparecerá al hacer hover con Javascript */
  width: 350px;
  height: 200px;
  background-color: var(--main-color);
  position: absolute;
  top: 0;
  left: 0;
  transform: translateX(-350px);
  transition: transform .5s ease;

}
.buttonBackgroundIsActive{
  transform: translateX(0);

}

.Button-div{/* Es el contenedor de los span. Actua com limitador, mostrando solo uno de los span */
  width: 100%;
  height: 1.9rem;
  display: flex;
  flex-flow: column nowrap;
  justify-content: end;
  align-items: center;
  overflow: hidden;
 

}
.Button-span{/* Es el contenido, al activarse la funcion en javascript, se mueven hacia arriva */
  width: 100%;
  height: 50px;
  text-align: center;
  font-family: "Orbitron", sans-serif;
  font-size: 1.5rem;
  color: var(--main-color);
  transform: translateY(1.9rem);
  transition: transform .5s ease;
}
.buttonSpanIsActive{
  transform: translateY(0);
}
.Button-span:nth-child(2){/* Es el que se muestra al activarse la funcion */
  color: var(--secondary-color);
}


/* Descripción: Estilo del Contact.
Estructura: 
- Contact-h3
- Contact-p
- Contact-cuadro
*/

.Contact{
  padding: 3rem 1rem;
  width: 100%;
  max-width: 1300px;
  margin: auto;
  background-color: var(--main-bg-color);
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
  gap: 3rem;
}
.Contact-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
}
.Contact-p{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  max-width: 1000px;
  text-align: center;
}
.Contact-cuadros-wrapper{ /* Container de los cuadros */
  width: 100%;
  min-height: 800px;
  position: relative;
  margin: auto;
  overflow: hidden;

}
.Contact-cuadro{ /* De la misma manera que los cuadros del Hero, se les da posicion absolute y se posicionan individualmente. 
  Se les podría haber dado las mismas clases que las del Hero, y así evitar repetirlo, pero como entonces sería afectado por las funciones de Javascript, y quería usar otras transition en css, decidí no hacerlo por falta de tiempo.  */

  position: absolute;
  border: 1px solid var(--secondary-color);

}
.contactCuadroIsActive{/* Al añadirse a los cuadros, se hacen grandesy cambian de color*/
  transform: scale(2);
  border: 1px solid var(--main-color); 

}
.Contact-cuadro--Primero{
  width: 320px;
  height: 192px;
  left: calc(50% - (320px / 2));
  right: calc(50% - (320px / 2));
  top: calc(50% - (192px / 2));
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  transition: transform 1.2s ease, border 1.2s ease;
  z-index: 2;
  overflow: hidden;


}

.Contact-cuadro--Primero .Gallery-a--button{
  background: var(--main-bg-color);
  text-transform: uppercase;
}
.Contact-cuadro-span{
  color: var(--main-color);
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
}
.Contact-cuadro--Segundo{
  transition: transform 1.1s ease, border 1.1s ease;
  width: 340px;
  min-height: calc(340px * 0.6);
  top: calc(50% - ((340px * 0.6) / 2));
  right: calc(50% - (340px / 2));
  left: calc(50% - (340px / 2));

}
.Contact-cuadro--Tercero{
  transition: transform 1s ease, border 1s ease;
  width: 360px;
  min-height: calc(360px * 0.6);
  top: calc(50% - ((360px * 0.6) / 2));
  right: calc(50% - (360px / 2));
  left: calc(50% - (360px / 2));


}
.Contact-cuadro--Cuarto{
  transition: transform 0.9s ease, border 0.9s ease;
  width: 390px;
  min-height: calc(390px * 0.6);
  top: calc(50% - ((390px * 0.6) / 2));
  right: calc(50% - (390px / 2));
  left: calc(50% - (390px / 2));


}
.Contact-cuadro--Quinto{
  transition: transform 0.8s ease, border 0.8s ease;
  width: 430px;
  min-height: calc(430px * 0.6);
  top: calc(50% - ((430px * 0.6) / 2));
  right: calc(50% - (430px / 2));
  left: calc(50% - (430px / 2));


}
.Contact-cuadro--Sexto{
  transition: transform 0.7s ease, border 0.7s ease;
  width: 470px;
  min-height: calc(470px * 0.6);
  top: calc(50% - ((470px * 0.6) / 2));
  right: calc(50% - (470px / 2));
  left: calc(50% - (470px / 2));

  

}
.Contact-cuadro--Septimo{
  transition: transform 0.6s ease, border 0.6s ease;
  width: 520px;
  min-height: calc(520px * 0.6);
  top: calc(50% - ((520px * 0.6) / 2));
  right: calc(50% - (520px / 2));
  left: calc(50% - (520px / 2));


}
.Contact-cuadro--Octavo{
  transition: transform 0.5s ease, border 0.5s ease;
  width: 580px;
  min-height: calc(580px * 0.6);
  top: calc(50% - ((580px * 0.6) / 2));
  right: calc(50% - (580px / 2));
  left: calc(50% - (580px / 2));


}
.Contact-cuadro--Noveno{
  transition: transform 0.4s ease, border 0.4s ease;
  width: 650px;
  min-height: calc(650px * 0.6);
  top: calc(50% - ((650px * 0.6) / 2));
  right: calc(50% - (650px / 2));
  left: calc(50% - (650px / 2));



}
.Contact-cuadro--Decimo{
  transition: transform 0.3s ease, border 0.3s ease;
  width: 730px;
  min-height: 438px;
  top: calc(50% - (438px / 2));
  right: calc(50% - (730px / 2));
  left: calc(50% - (730px / 2));

}
.Contact-cuadro--Undecimo{
  transition: transform 0.2s ease, border 0.2s ease;
  width: 820px;
  min-height: 492px;
  top: calc(50% - (492px / 2));
  right: calc(50% - (820px / 2));
  left: calc(50% - (820px / 2));

}
.Contact-cuadro--Duodecimo{
  transition: transform 0.1s ease, border 0.1s ease;
  width: 920px;
  min-height: 552px;
  top: calc(50% - (552px / 2));
  right: calc(50% - (920px / 2));
  left: calc(50% - (920px / 2));

}
@media (max-width: 1000px){ /* Quitamos los cuadros salvo el primero. */
  .Contact-cuadro{display: none;}
  .Contact-cuadro--Primero{
    display: flex;
  }
  .Contact-cuadros-wrapper{
    min-height: 250px;
  }
}

/* Descripción: Estilo del Footer.
Estructura: 
- Footer-main-wrapper
- Info
- Footer-nav
- Footer-rights
*/
.Footer{ /* Un simple Footer*/
  max-width: 1300px;
  margin: auto;

}
.Footer-main-wrapper{
  width: 100%;
  min-height: 400px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  font-family: "Lato", sans-serif;
  color: var(--main-bg-color);
  font-size: var(--fontsize-tittle-small);
  border-top: 1px solid var(--main-color);
  background-color: var(--main-color);
}
.Info{
  width: 50%;
  min-height: 300px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: start;
  gap: 1rem;
  padding: 0 30px;

}
.Info-logo-wrapper{
  width: 150px;
  min-height: 150px;
  border-radius: 12px;
  background-color: var(--secondary-color);
}

.Footer-nav{
  width: 50%;
}
.Footer-ul{
  width: 100%;
  min-height: 300px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: start;
  gap: 1rem;
}
.Footer-a:hover{
  color: var(--secondary-color);
}
.Footer-rights{
  width: 100%;
  min-height: 40px;
  background-color: var(--main-bg-color);
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  gap: 1rem;

}
.Footer-rights-span{
  font-family: "Lato", sans-serif;
  font-size: 1rem;
  color: var(--secondary-color);

}
@media (max-width: 1000px){ /* Quitamos el ul con los enlaces y hacemos que el Info ocupe el 100% del contenedor */
  .Footer-nav{
    display: none;
  }
  .Info{
    width: 100%;
  }
}


