
/* index.css
-Reset
-Variables
-Header
-Hero
-About-me
-Carrusel
-Skills
-Grid
-Work
-Gallery
-Button
-Contact
-Footer
-Info
 */

/* Reset / Normmalizador */
*{
  margin:0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
}
li{
  list-style: none;
}
a{
  display: block;
  color: inherit;
  text-decoration: none;
}
p a{
  display: inline;
}
img , svg {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;

}
svg{
  fill: currentColor;
}
:root{
  font-size: 100%;
  scroll-behavior: smooth;
  --main-color: #FFD700; /* Color principal */
  --secondary-color: #F6F6F6; /* Color secundario */
  --main-bg-color: #121212; /* Color de fondo */
  --fontsize-tittle-big: clamp(4rem,  7.38vw, 6rem); /* Tamaño de titulo */
  --fontsize-tittle-medium: clamp(1.5rem,  4vw, 3rem);/* Tamaño de titulo */
  --fontsize-tittle-small: clamp(.9rem,  2.5vw, 1.5rem);/* Tamaño de titulo */
  --fontsize-p: 1rem; /* Tamaño de p */

}
body{
  font-family: Arial, Helvetica, sans-serif;
  hyphens: auto;
  background-color: var(--main-bg-color);
}
h1 , h2 , h3 , h4 , h5 , h6{
  font-size: inherit;
  font-weight: inherit;
}
/* Descripción: Estilo del Header
Estructura: 
- Header-top
- Header-bottom
*/
.Header{
  width: 200px;
  height: 60px;
  display: flex;
  flex-flow: column nowrap;
  position: fixed;
  top: 10px;
  right: 0;
  z-index: 3;
  overflow: hidden;
  transition: height .5s ease;
  gap: 16px;
}
.HeaderIsVisible{
  height: auto; /*Cuando se añade se adapta a la altura del header, el cual está a 60px */
}

.Header-top{
  width: 100%;
  min-height: 60px;
  transform: translateX(120px);
  transition: transform .5s ease;
  cursor: pointer;

}
.Header-top-h1{
  width: 100%;
  position: relative;
  overflow: hidden;
  width: 60px;
  height: 60px;
  background-color: var(--main-bg-color);
  border-radius: 60px;
}
.Header-top-span--none{
  position: absolute; /* Como no quiero que se vea, pero tampoco quiero que sea display: none, he utilizado este metodo. */
  left: 999px;
  opacity: 0;
  
}

.Header-top-svg{
  padding-left: 6px; /* Como no se centraba completamente en el contenedor, se añadió un padding.*/
  padding-top: 5px;
}
.Header-bottom{
  width: 100%;
  min-height: 150px;
  transform: translateX(200px);
  transition: transform .5s ease;

}
.Header-bottom-ul{
  width: 100%;
  min-height: 130px;
  background-color: var(--main-bg-color);
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: start;
  gap: 1px;
}
.Header-bottom-li{
  width: 100%;


}
.Header-bottom-a{
background-color: var(--secondary-color);
  width: 100%;
  min-height: 2.5rem;
  display: flex;
  flex-flow: row nowrap;
  justify-content: start;
  align-items: center;
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--main-bg-color);
}
.Header-bottom-a:hover{
  background-color: rgba(255, 255, 255, 0); /* Al hacer hover el fondo se vuelve transparente */
  color: var(--secondary-color);
}
.headerIsActive{
  transform: translateX(0); /* El Header se muestra por completo  */

}
/* Descripción: Estilo del Hero.
Estructura: 
- Hero-cuadros-wrapper
- Hero-cuadro
*/

.Hero{
  position: relative;
  overflow: hidden;
  width: 100%;

}

.Hero-cuadros-wrapper{ /* Es el contenedor de todos los cuadros */
  width: 100vw; 
  background-color: var(--main-bg-color);
  min-height: 100vh;
  position: relative;
  top: 0; 

  
}


.Hero-cuadro{ /* Vamos a dar a todos los cuadros una posicion absoluta y centrarlos despues individualmente */
  background-color: rgba(0, 0, 255, 0);
  position: absolute;
  border: 1px solid #FFD700;
  z-index: 0;

  

}
.Hero-cuadro-wrapper{ /* Debido a ciertos problemas a la hora de activar los efectos con el codigo de javascript, tuve que crear un wrapper para Hero-cuadro--Primero. 
  Este wrapper mantiene el Hero-cuadro--Primero en el centro durante la transición de Javascript*/
  width: 100vw;
  min-height: 100vh;
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
}

.Hero-cuadro--Primero{ /* Damos el tamaño y la posicion. Hero-cuadro--Primero es especial, ya que contiene el contenido a mostrar en el hero. */
  transition: width 0.7s ease, transform 0.1s ease, height 0.7s ease;
  background-color: var(--main-color); 
  height: 100vh;
  width: 100vw;
  position: static;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  font-family: "Orbitron", sans-serif;
  font-size: clamp(4rem,  7.38vw, 6rem);
  font-weight: 700;
  color: var(--secondary-color);
  text-transform: uppercase;
}


.Hero-cuadro-span--none{ /* En este caso tampoco quería que se viera este span, pero como a diferencia del caso de Header-top-span--none,
  he considerado que puedo utilizar este método, ya que al usar cualquier otro daba problemas */
  display: none; 
}
.Hero-cuadro-limiter{ /* Coloco cada elemento del Hero-cuadro--Primero de forma indivual */
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  width: 80%;
}

.Hero-cuadro-limiter--Top{/* Coloco cada elemento del Hero-cuadro--Primero de forma indivual */
  justify-content: start;
}
.Hero-cuadro-svg-wrapper{/* Coloco cada elemento del Hero-cuadro--Primero de forma indivual */
  width: 100%;
  
}
.Hero-cuadro-svg-wrapper svg{
  width: 200px;
  margin: auto;
}
.Hero-cuadro-limiter--Bottom{/* Coloco cada elemento del Hero-cuadro--Primero de forma indivual */
  justify-content: end;
  padding: 0 1rem;
}



@keyframes fadeIn { /* Animacion de las letras*/
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.Hero-cuadro-span {
  display: inline-block;
  opacity: 0;
  animation: fadeIn 0.5s ease-in-out forwards;
}

.Hero-cuadro-limiter span:nth-child(1) { animation-delay: 0.1s; }/* Delay de cada una de las letras*/
.Hero-cuadro-limiter span:nth-child(2) { animation-delay: 0.2s; }
.Hero-cuadro-limiter span:nth-child(3) { animation-delay: 0.3s; }
.Hero-cuadro-limiter span:nth-child(4) { animation-delay: 0.4s; }
.Hero-cuadro-limiter span:nth-child(5) { animation-delay: 0.5s; }
.Hero-cuadro-limiter span:nth-child(6) { animation-delay: 0.6s; }
.Hero-cuadro-limiter span:nth-child(7) { animation-delay: 0.7s; }
.Hero-cuadro-limiter span:nth-child(8) { animation-delay: 0.8s; }

.Hero-cuadro-svg-wrapper svg path{ /*  Preparacion de la animacion del svg*/
  fill: transparent;
  stroke: var(--secondary-color);
  stroke-width: 1;
  stroke-dasharray: 450;
  stroke-dashoffset: 450;
  animation: svgAnimation 2.5s ease-in-out 1 forwards;
}
@keyframes svgAnimation{ /* Animacion de las letras*/
  0%{
    stroke-dashoffset: 450;
  }
  80%{
    fill: transparent;
  }
  100%{
    fill: var(--secondary-color);
    stroke-dashoffset: 0;
  }
}
.Hero-cuadro--Segundo{ /* Damos el tamaño y la posicion de cada Hero-cuadro hasta Hero-cuadro--Duodecimo */
  transition: all .2s ease;
  width: 340px;
  min-height: calc(340px * 0.6);
  top: calc(50% - ((340px * 0.6) / 2));
  right: calc(50% - (340px / 2));


}
.Hero-cuadro--Tercero{
  transition: all .3s ease;
  width: 360px;
  min-height: calc(360px * 0.6);
  top: calc(50% - ((360px * 0.6) / 2));
  right: calc(50% - (360px / 2));

}
.Hero-cuadro--Cuarto{
  transition: all .4s ease;
  width: 390px;
  min-height: calc(390px * 0.6);
  top: calc(50% - ((390px * 0.6) / 2));
  right: calc(50% - (390px / 2));

}
.Hero-cuadro--Quinto{
  transition: all .5s ease;
  width: 430px;
  min-height: calc(430px * 0.6);
  top: calc(50% - ((430px * 0.6) / 2));
  right: calc(50% - (430px / 2));

}
.Hero-cuadro--Sexto{
  transition: all .6s ease;
  width: 470px;
  min-height: calc(470px * 0.6);
  top: calc(50% - ((470px * 0.6) / 2));
  right: calc(50% - (470px / 2));
  

}
.Hero-cuadro--Septimo{
  transition: all .7s ease;
  width: 520px;
  min-height: calc(520px * 0.6);
  top: calc(50% - ((520px * 0.6) / 2));
  right: calc(50% - (520px / 2));

}
.Hero-cuadro--Octavo{
  transition: all .8s ease;
  width: 580px;
  min-height: calc(580px * 0.6);
  top: calc(50% - ((580px * 0.6) / 2));
  right: calc(50% - (580px / 2));

}
.Hero-cuadro--Noveno{
  transition: all .9s ease;
  width: 650px;
  min-height: calc(650px * 0.6);
  top: calc(50% - ((650px * 0.6) / 2));
  right: calc(50% - (650px / 2));


}
.Hero-cuadro--Decimo{
  transition: all 1s ease;
  width: 730px;
  min-height: 438px;
  top: calc(50% - (438px / 2));
  right: calc(50% - (730px / 2));
}
.Hero-cuadro--Undecimo{
  transition: all 1.1s ease;
  width: 820px;
  min-height: 492px;
  top: calc(50% - (492px / 2));
  right: calc(50% - (820px / 2));
}
.Hero-cuadro--Duodecimo{
  transition: all 1.2s ease;
  width: 920px;
  min-height: 552px;
  top: calc(50% - (552px / 2));
  right: calc(50% - (920px / 2));
}
@media (max-width: 1000px){ /* Los Hero-cuadro no son visibles si no se hace scroll. Solo se verá el primero, que ocupara toda la pantalla. */
  .Hero-cuadro{
    display: none;
  }
  .Hero-cuadro--Primero{
    display: flex;
    font-family: "Orbitron", sans-serif;
    font-size: 60px;
    font-weight: 700;
    color: var(--secondary-color);
    text-transform: uppercase;
    padding-top: 100px;
    width: 100%;
  }

  .Hero-cuadro-limiter{ /* Para pantalas pequeñas, es preferible que todos los elementos esten centrados */
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    width: 100%;
  }
  
.Hero-cuadro-limiter--Top{
  justify-content: center;

}
.Hero-cuadro-svg-wrapper{
  width: 200px;
  margin: auto;
}
.Hero-cuadro-limiter--Bottom{
  justify-content: center;
  margin: 0;
}


 
 
}
/* Descripción: Estilo del About me.
Estructura: 
- About-me-h3
- About-me-p
- Carrusel
- About-me-p-wrapper
*/
.About-me{ 
  background-color: var(--main-bg-color);
  width: 100%;
  margin: auto;
  max-width: 1100px;
  position: relative;
  z-index: 2;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: start;
  padding: 3rem 1rem;
}
.About-me-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
  font-weight: 400;
  padding-bottom: 3rem;
}
.About-me-p{
  font-family: "Lato", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  font-weight: 400;

}
.Carrousel-wrap{ /* Contenedor del carrusel. Con el se limita la cantidad del carrusel que se muestra */
  width: 100%;
  height: 300px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: start;
  overflow: hidden;
  margin-top: 40px;
  
}
.Carrusel{ /* Este es el estilo del carrusel. Se trata de un carrusel giratorio */
  width: 1200px;
  min-height: 1200px;
  position: relative;
  transform-origin: center; 
  transition: transform 1s ease;

}
.Carrusel-li{ /* Vamos a colocar los contenedores en posicion absoluta y en forma de abanico, para que forme una rueda */
  width: 200px;
  height: 600px;
  position: absolute;
  top: 0;
  left: calc(50% - 100px);
  transform-origin: bottom;
  padding-top: 5px;

}
.Carrusel-li--Primero{
  transform: rotate(0);

}
.Carrusel-li--Segundo{
  transform: rotate(36deg);

}
.Carrusel-li--Tercero{
  transform: rotate( 72deg);

}
.Carrusel-li--Cuarto{
  transform: rotate( 108deg);

}
.Carrusel-li--Quinto{
  transform: rotate( 144deg);

}
.Carrusel-li--Sexto{
  transform: rotate( 180deg);

}
.Carrusel-li--Setimo{
  transform: rotate( 216deg);

}
.Carrusel-li--Octavo{
  transform: rotate(252deg);
}
.Carrusel-li--Noveno{
  transform: rotate(288deg);
}
.Carrusel-li--Decimo{
  transform: rotate(324deg);
}
.Carrusel-img-wrapper{ /* A parte de los contenedores Carrusel-li, he metido cada svg en un wrapper para mayor control */
  display: flex;
  flex-flow: row wrap;
  align-items: start;
  justify-content: center;
  width: 90%;
}
.Carrusel-svg-wrappers{ /* Algunos de ellos, al tener tres svg, necesité añadir otra div mas, para poder controlarlo mejor. */
  width: 50%;
}
.About-me-p-wrapper{
  width: 100%;
  min-height: 250px;
  background-color: var(--main-bg-color);
  border: 1px solid var(--main-color) ;
  border-radius: 1rem;
  padding: 30px;
}
.About-me-p-wrapper .About-me-p{
  padding-bottom: 1rem;
}
@media (max-width: 1000px){ /* Para pantallas pequeñas, es mejor quitar elementos como el carrusel giratorio, el cual no funciona sin scroll */


  .Carrousel-wrap{
    display: none;
  }
  .Carrusel{
    display: none;
  }
  .About-me-p-wrapper{
    display: none;
  }
  .About-me-p{
    font-family: "Orbitron", sans-serif;
  }
}
/* Descripción: Estilo del Skills.
Estructura: 
- Skills-h3
- Skills-p
- Grid
- Skills-button-wrapper
*/
.Skills{
  padding: 3rem 1rem;
  width: 100%;
  background-color: var(--main-bg-color);
  max-width: 1300px;
  margin: auto;
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
}
.Skills-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
  padding-bottom: 3rem;

}
.Skills-p{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  padding-bottom: 40px;
}
.Grid{ /* Creo un grid de 4 columnas. Los rows son automaticos, manteniendo una altura de 300px */
  width: 100%;
  max-width: 1000px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: 300px;
  color: var(--secondary-color);
  background-color: var(--main-color);

}
.Grid-li{
  display: grid; /* Tuve que añadir diplay grid aqui porque el inspector me decía lo siguiente: "The display: list-item property prevents grid-column-end from having an effect." */
  border: 1px solid var(--main-color);
  background-color: var(--main-bg-color);
  overflow: hidden;
  opacity: 0 ; /* Hacemos que no se vean por defecto */
  transform: translateX(-200px);
  transition: transform .5s ease, opacity .5s ease;
 
}
.gridIsVisible{
  transform: translateX(0px); /* Al añadir esta clase apareceran con un efecto */
  opacity: 1;
}
.Grid-li--Primero{ /* Posicionaremos algunos de los elementos en el grid según correspondan y les ponemos una transition*/
  grid-column-start: 1;
  grid-column-end: 3;

  grid-row-start: 1;
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);


}

.Grid-li--Tercero{
  grid-row-start: 1;
  grid-column-start: 3;
  grid-column-end: 5;
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  transition-delay: .2s;

}
.Grid-li--Cuarto{
  grid-column-start: 3;
  grid-column-end: 5;
  grid-row-start: 2;
  grid-row-end: 4;
 
}
.Grid-li--Quinto{
  font-family: "Orbitron", sans-serif;
  font-size: 2rem;
  font-weight: 600;
  text-transform: uppercase;

}
.Grid-li--Sexto{
  font-family: "Orbitron", sans-serif;
  font-size: 2rem;
  font-weight: 600;
  text-transform: uppercase;

}
.Grid-li--Setimo{
  background-color: var(--main-color);
}

.Grid-li--Noveno{
  grid-column: span 2;
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  transition-delay: .2s;


}
.Grid-li--Decimo{
  transition-delay: .4s;
}

.Skills-button-wrapper{
  width: 100%;
  padding-top: 4rem;
}
@media (max-width: 1000px){ /* Transformamos de display grid a flex column */
  .Grid{ 
    display: flex;
    justify-content: center;
    align-items: start;
    flex-flow: column nowrap;
    gap: 16px;
   
  
  }
  .Grid-li{ /* En pantallas mas pequeñas solo quiero mostrar los textos, no svg o imagenes */
    display: none;
  }
  .Grid-li--Primero, .Grid-li--Tercero, .Grid-li--Quinto, .Grid-li--Sexto, .Grid-li--Noveno{
    display: flex;
    font-size: var(--fontsize-tittle-small);
    text-transform: none;
    font-weight: 400;
    width: 100%;
    padding: .5rem;

  }
}
/* Descripción: Estilo del Work.
Estructura: 
- Work-h3
- Gallery
- Button
*/
.Work{
  padding: 3rem 0;
  width: 100%;
  max-width: 1300px;
  margin: auto;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: start;
  background-color: var(--main-bg-color);
}
.Work-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
}
.Work-gallery-wrapper{
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: start;

}
.Gallery{ /* Aqui la galeria es un ul con un simple flex con dirección column */
  width: 80%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
  gap: 3rem;
  padding: 3rem 0;

}
.Gallery-li{ /* Cada li tiene a su vez display flex con la misma dirección*/
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
  gap: 3rem;
  opacity: 0 ; /* Hacemos que no se vea */
  transform: translateY(200px) scale(0.5);  /* Preparación para el efecto de Javascript */
  transition: transform .5s ease, opacity .5s ease;
  color: var(--secondary-color);


}
.galleryIsVisible{
  opacity: 1 ;
  transform: translateY(0) scale(1); /* Al añadir la clase aparece con una animación */
}

.Gallery-p{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);

}

.Gallery-img-wrapper{ /* Cada Gallery-li tiene un contenedor de las imagnenes  */
  width: 100%;
  position: relative;
  min-height: 600px;


}
.Gallery-img{ /* Le vamos a dar posicion absoluta y colocar cada una individualmente */
  position: absolute;
  transition: transform 0.6s ease;
}
.Gallery-img--Primera{
  width:400px;
  height: 300px;
  top: 0;
  left: 0;
  z-index: 1;
  
}

.Gallery-img--Segunda{
  width:400px;
  height: 300px;
  bottom: 0;
  right: 0;
}
.Gallery-img--Tercera{
  width: 600px;
  height: 300px;
  top: calc(50% - 150px);
  left: calc(50% - 300px);

}
.Gallery-li:nth-of-type(3) .Gallery-img--Primera { /* He considerado mejor ajustar la altura de una de las imagenes en concreto*/
  height: 500px;
}
.GalleryImgIsActive{ /* Clase para cuando se haga hover. Cuando se añada se hace grande. */
  transform: scale(1.3);
  z-index: 1;
  box-shadow: 0rem 0rem .3rem .1rem var(--main-color);
}
.Button{ /* Aqui se establece el estilo del enlace. Este estilo se aplicará al enlace que hay en la sección Skills y Contact */
  width: 350px;
  height:200px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
  border: 1px solid var(--main-color);
  background: repeating-linear-gradient( /* Para poder destacar más el enlace, se le da un patrón con líneas blancas */
  45deg,
  #F6F6F6,
  #121212 5px,
  #121212 5px,
  #121212 60px
);
}
.Button-background{ /* Este es el fondo que aparecerá al hacer hover con Javascript */
  width: 350px;
  height: 200px;
  background-color: var(--main-color);
  position: absolute;
  top: 0;
  left: 0;
  transform: translateX(-350px);
  transition: transform .5s ease;

}
.buttonBackgroundIsActive{
  transform: translateX(0);

}

.Button-div{ /* Es el contenedor de los span. Actua com limitador, mostrando solo uno de los span */
  width: 100%;
  height: 1.9rem;
  display: flex;
  flex-flow: column nowrap;
  justify-content: end;
  align-items: center;
  overflow: hidden;
 

}
.Button-span{ /* Es el contenido, al activarse la funcion en javascript, se mueven hacia arriva */
  width: 100%;
  height: 50px;
  text-align: center;
  font-family: "Orbitron", sans-serif;
  font-size: 1.5rem;
  color: var(--main-color);
  transform: translateY(1.9rem);
  transition: transform .5s ease;
}
.buttonSpanIsActive{
  transform: translateY(0);
}
.Button-span:nth-child(2){ /* Es el que se muestra al activarse la funcion */
  color: var(--secondary-color);
}
@media (max-width: 1000px){
  .Gallery{
    margin: 0;
  }
  .Gallery-img{ /* Para pantallas mas pequeñas no interesa que esten en posicion absolute. Ocupara 100% de la contenedora */
    position: static;
    height: inherit;
    width: 100%;

  }
  .Gallery-img-wrapper{ /* El contenedor se le dara display flex y direccion column */
    width: 100%;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: start;
    gap: 16px;
  }
  

 
}
/* Descripción: Estilo del Contact.
Estructura: 
- Contact-h3
- Contact-p
- Contact-cuadro
*/

.Contact{
  padding: 3rem 1rem;
  width: 100%;
  max-width: 1300px;
  margin: auto;
  background-color: var(--main-bg-color);
  display: flex;
  flex-flow: column nowrap;
  justify-content: start;
  align-items: center;
  gap: 3rem;
}
.Contact-h3{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-medium);
  color: var(--main-color);
}
.Contact-p{
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
  color: var(--secondary-color);
  max-width: 1000px;
  text-align: center;
}
.Contact-cuadros-wrapper{ /* Container de los cuadros */
  width: 100%;
  min-height: 800px;
  position: relative;
  margin: auto;
  overflow: hidden;

}
.Contact-cuadro{ /* De la misma manera que los cuadros del Hero, se les da posicion absolute y se posicionan individualmente. 
  Se les podría haber dado las mismas clases que las del Hero, y así evitar repetirlo, pero como entonces sería afectado por las funciones de Javascript, y quería usar otras transition en css, decidí no hacerlo por falta de tiempo.  */

  position: absolute;
  border: 1px solid var(--secondary-color);

}
.contactCuadroIsActive{/* Al añadirse a los cuadros, se hacen grandesy cambian de color*/
  transform: scale(2);
  border: 1px solid var(--main-color); 

}
.Contact-cuadro--Primero{
  width: 320px;
  height: 192px;
  left: calc(50% - (320px / 2));
  right: calc(50% - (320px / 2));
  top: calc(50% - (192px / 2));
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  transition: transform 1.2s ease, border 1.2s ease;
  z-index: 2;
  overflow: hidden;


}

.Contact-cuadro--Primero .Gallery-a--button{
  background: var(--main-bg-color);
  text-transform: uppercase;
}
.Contact-cuadro-span{
  color: var(--main-color);
  font-family: "Orbitron", sans-serif;
  font-size: var(--fontsize-tittle-small);
}
.Contact-cuadro--Segundo{
  transition: transform 1.1s ease, border 1.1s ease;
  width: 340px;
  min-height: calc(340px * 0.6);
  top: calc(50% - ((340px * 0.6) / 2));
  right: calc(50% - (340px / 2));
  left: calc(50% - (340px / 2));

}
.Contact-cuadro--Tercero{
  transition: transform 1s ease, border 1s ease;
  width: 360px;
  min-height: calc(360px * 0.6);
  top: calc(50% - ((360px * 0.6) / 2));
  right: calc(50% - (360px / 2));
  left: calc(50% - (360px / 2));


}
.Contact-cuadro--Cuarto{
  transition: transform 0.9s ease, border 0.9s ease;
  width: 390px;
  min-height: calc(390px * 0.6);
  top: calc(50% - ((390px * 0.6) / 2));
  right: calc(50% - (390px / 2));
  left: calc(50% - (390px / 2));


}
.Contact-cuadro--Quinto{
  transition: transform 0.8s ease, border 0.8s ease;
  width: 430px;
  min-height: calc(430px * 0.6);
  top: calc(50% - ((430px * 0.6) / 2));
  right: calc(50% - (430px / 2));
  left: calc(50% - (430px / 2));


}
.Contact-cuadro--Sexto{
  transition: transform 0.7s ease, border 0.7s ease;
  width: 470px;
  min-height: calc(470px * 0.6);
  top: calc(50% - ((470px * 0.6) / 2));
  right: calc(50% - (470px / 2));
  left: calc(50% - (470px / 2));

  

}
.Contact-cuadro--Septimo{
  transition: transform 0.6s ease, border 0.6s ease;
  width: 520px;
  min-height: calc(520px * 0.6);
  top: calc(50% - ((520px * 0.6) / 2));
  right: calc(50% - (520px / 2));
  left: calc(50% - (520px / 2));


}
.Contact-cuadro--Octavo{
  transition: transform 0.5s ease, border 0.5s ease;
  width: 580px;
  min-height: calc(580px * 0.6);
  top: calc(50% - ((580px * 0.6) / 2));
  right: calc(50% - (580px / 2));
  left: calc(50% - (580px / 2));


}
.Contact-cuadro--Noveno{
  transition: transform 0.4s ease, border 0.4s ease;
  width: 650px;
  min-height: calc(650px * 0.6);
  top: calc(50% - ((650px * 0.6) / 2));
  right: calc(50% - (650px / 2));
  left: calc(50% - (650px / 2));



}
.Contact-cuadro--Decimo{
  transition: transform 0.3s ease, border 0.3s ease;
  width: 730px;
  min-height: 438px;
  top: calc(50% - (438px / 2));
  right: calc(50% - (730px / 2));
  left: calc(50% - (730px / 2));

}
.Contact-cuadro--Undecimo{
  transition: transform 0.2s ease, border 0.2s ease;
  width: 820px;
  min-height: 492px;
  top: calc(50% - (492px / 2));
  right: calc(50% - (820px / 2));
  left: calc(50% - (820px / 2));

}
.Contact-cuadro--Duodecimo{
  transition: transform 0.1s ease, border 0.1s ease;
  width: 920px;
  min-height: 552px;
  top: calc(50% - (552px / 2));
  right: calc(50% - (920px / 2));
  left: calc(50% - (920px / 2));

}
@media (max-width: 1000px){ /* Quitamos los cuadros salvo el primero. */
  .Contact-cuadro{display: none;}
  .Contact-cuadro--Primero{
    display: flex;
  }
  .Contact-cuadros-wrapper{
    min-height: 250px;
  }
}

/* Descripción: Estilo del Footer.
Estructura: 
- Footer-main-wrapper
- Info
- Footer-nav
- Footer-rights
*/
.Footer{ /* Un simple Footer*/
  max-width: 1300px;
  margin: auto;

}
.Footer-main-wrapper{
  width: 100%;
  min-height: 400px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  font-family: "Lato", sans-serif;
  color: var(--main-bg-color);
  font-size: var(--fontsize-tittle-small);
  border-top: 1px solid var(--main-color);
  background-color: var(--main-color);
}
.Info{
  width: 50%;
  min-height: 300px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: start;
  gap: 1rem;
  padding: 0 30px;

}
.Info-logo-wrapper{
  width: 150px;
  min-height: 150px;
  border-radius: 12px;
  background-color: var(--secondary-color);
}

.Footer-nav{
  width: 50%;
}
.Footer-ul{
  width: 100%;
  min-height: 300px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: start;
  gap: 1rem;
}
.Footer-a:hover{
  color: var(--secondary-color);
}
.Footer-rights{
  width: 100%;
  min-height: 40px;
  background-color: var(--main-bg-color);
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  gap: 1rem;

}
.Footer-rights-span{
  font-family: "Lato", sans-serif;
  font-size: 1rem;
  color: var(--secondary-color);

}
@media (max-width: 1000px){ /* Quitamos el ul con los enlaces y hacemos que el Info ocupe el 100% del contenedor */
  .Footer-nav{
    display: none;
  }
  .Info{
    width: 100%;
  }
}


